{"ast":null,"code":"const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET-USERS';\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nlet initialState = {\n  users: [],\n  pageSize: 100,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: true\n};\nexport const usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      return { ...state,\n        users: action.users\n      };\n\n    case SET_CURRENT_PAGE:\n      {\n        return { ...state,\n          currentPage: action.currentPage\n        };\n      }\n\n    case SET_TOTAL_COUNT:\n      {\n        return { ...state,\n          totalUsersCount: action.totalCount\n        };\n      }\n\n    case TOGGLE_IS_FETCHING:\n      {\n        return { ...state,\n          isFetching: action.isFetching\n        };\n      }\n\n    default:\n      return state;\n  }\n};\nexport const follow = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unfollow = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsers = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setTotalUsersCount = totalCount => ({\n  type: SET_TOTAL_COUNT,\n  totalCount\n});\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});","map":{"version":3,"sources":["C:/incubator/social_network_ts/src/redux/users-reducer.ts"],"names":["FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","TOGGLE_IS_FETCHING","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","usersReducer","state","action","type","map","u","id","userId","followed","totalCount","follow","unfollow","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching"],"mappings":"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","sourcesContent":["export type ActionsUsersType = | FollowActionCreatorType\r\n    | UnfollowActionCreatorType\r\n    | SetUsersActionCreatorType\r\n    | SetCurrentPageCreatorType\r\n    | SetTotalCountActionCreatorType\r\n    | ToggleIsFeatcingActionCreatorType\r\n\r\nexport type UsersPropsType = {\r\n    userPhoto: string\r\n    //photoUrl: string\r\n    id: number\r\n    followed: boolean\r\n    fullName: string\r\n    status: string\r\n    name: string\r\n    location: {city: string, country: string}\r\n    photos: {\r\n        small: string,\r\n        //large: string\r\n    }\r\n}\r\nexport type UsersReducerType = {\r\n    users: Array<UsersPropsType>\r\n    pageSize: number   ////????\r\n    totalUsersCount: number   ////????\r\n    currentPage: number //???\r\n    isFetching: boolean\r\n}\r\nexport type FollowActionCreatorType = {\r\n    type: 'FOLLOW',\r\n    userId: number\r\n}\r\nexport type UnfollowActionCreatorType = {\r\n    type: 'UNFOLLOW',\r\n    userId: number\r\n}\r\nexport type SetUsersActionCreatorType = {\r\n    type: 'SET-USERS',\r\n    users: Array<UsersPropsType>\r\n}\r\nexport type SetCurrentPageCreatorType = {\r\n    type: 'SET-CURRENT-PAGE'\r\n    currentPage: number\r\n}\r\nexport type SetTotalCountActionCreatorType = {\r\n    type: 'SET_TOTAL_COUNT'\r\n    totalCount: number\r\n}\r\nexport type ToggleIsFeatcingActionCreatorType = {\r\n    type: 'TOGGLE_IS_FETCHING'\r\n    isFetching: boolean\r\n}\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET-USERS'\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE'\r\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\n\r\nlet initialState: UsersReducerType = {\r\n    users: [],\r\n    pageSize: 100,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true\r\n}\r\n\r\nexport const usersReducer = (state: UsersReducerType = initialState, action: ActionsUsersType) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state, users:action.users\r\n            }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_COUNT: {\r\n            return {...state, totalUsersCount: action.totalCount}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const follow = (userId: number):FollowActionCreatorType => ({type: FOLLOW, userId});\r\nexport const unfollow = (userId: number): UnfollowActionCreatorType => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users: Array<UsersPropsType>): SetUsersActionCreatorType=> ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage: number): SetCurrentPageCreatorType => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalCount: number): SetTotalCountActionCreatorType => ({type: SET_TOTAL_COUNT, totalCount })\r\nexport const toggleIsFetching = (isFetching: boolean): ToggleIsFeatcingActionCreatorType => ({type: TOGGLE_IS_FETCHING, isFetching})\r\n"]},"metadata":{},"sourceType":"module"}