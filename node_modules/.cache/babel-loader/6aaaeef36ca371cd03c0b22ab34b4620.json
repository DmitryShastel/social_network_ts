{"ast":null,"code":"import { profileReducer } from \"./profile-reducer\";\nimport { gialogReducer } from \"./dialogs-reducer\";\nimport { sidebarReducer } from \"./sidebar-reducer\";\nexport let store = {\n  _state: {\n    profilePage: {\n      newPostText: \"\",\n      posts: [{\n        id: 1,\n        message: 'Hi, how are you',\n        likesCount: 12\n      }, {\n        id: 2,\n        message: 'It\\'s my first post',\n        likesCount: 11\n      }]\n    },\n    dialogsPage: {\n      dialogs: [{\n        id: 1,\n        name: 'Dimych'\n      }, {\n        id: 2,\n        name: 'Andrew'\n      }, {\n        id: 3,\n        name: 'Sveta'\n      }, {\n        id: 4,\n        name: 'Sasha'\n      }, {\n        id: 5,\n        name: 'Viktor'\n      }, {\n        id: 6,\n        name: 'Valera'\n      }],\n      messages: [{\n        id: 1,\n        message: 'Hi'\n      }, {\n        id: 2,\n        message: 'Hi'\n      }, {\n        id: 3,\n        message: 'Yo'\n      }, {\n        id: 4,\n        message: 'Yo'\n      }, {\n        id: 5,\n        message: 'Yo'\n      }],\n      newMessageBody: \"\"\n    },\n    sidebar: {}\n  },\n\n  _callSubcsriber() {\n    console.log('State was changed');\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  subscribe(observer) {\n    this._callSubcsriber = observer;\n  },\n\n  dispatch(action) {\n    this._state.profilePage = profileReducer(this._state.profilePage, action);\n    this._state.dialogsPage = gialogReducer(this._state.dialogsPage, action);\n    this._state.sidebar = sidebarReducer(this._state.sidebar, action);\n\n    this._callSubcsriber();\n  }\n\n};\n//actions:\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\nconst SEND_MESSAGE = 'SEND-MESSAGE'; //actionsCreaters:\n\nexport const addPostActionCreater = () => {\n  return {\n    type: ADD_POST\n  };\n};\nexport const updateNewPostTextActionCreater = text => {\n  return {\n    type: UPDATE_NEW_POST_TEXT,\n    newText: text\n  };\n};\nexport const sendMessageActionCreator = () => {\n  return {\n    type: SEND_MESSAGE\n  };\n};\nexport const updateNewMessageBodyActionCreator = body => {\n  return {\n    type: UPDATE_NEW_MESSAGE_BODY,\n    body: body\n  };\n};\n/* if (action.type === ADD_POST) {\r\n          const newPost: PostType = {\r\n              id: new Date().getTime(),\r\n              message: this._state.profilePage.newPostText,\r\n              likesCount: 0\r\n          };\r\n\r\n          this._state.profilePage.posts.push(newPost);\r\n          this._state.profilePage.newPostText = '';\r\n          this._callSubcsriber();\r\n      } else if (action.type === UPDATE_NEW_POST_TEXT) {\r\n          this._state.profilePage.newPostText = action.newText;\r\n          this._callSubcsriber();\r\n\r\n      } else if (action.type === SEND_MESSAGE) {\r\n          let body = this._state.dialogsPage.newMessageBody;\r\n          this._state.dialogsPage.newMessageBody = '';\r\n          this._state.dialogsPage.messages.push({id: 6, message: body});\r\n          this._callSubcsriber();\r\n      } else if (action.type === UPDATE_NEW_MESSAGE_BODY) {\r\n          this._state.dialogsPage.newMessageBody = action.body;\r\n\r\n      }*/","map":{"version":3,"sources":["C:/incubator/social_network_ts/src/redux/state.ts"],"names":["profileReducer","gialogReducer","sidebarReducer","store","_state","profilePage","newPostText","posts","id","message","likesCount","dialogsPage","dialogs","name","messages","newMessageBody","sidebar","_callSubcsriber","console","log","getState","subscribe","observer","dispatch","action","ADD_POST","UPDATE_NEW_POST_TEXT","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","addPostActionCreater","type","updateNewPostTextActionCreater","text","newText","sendMessageActionCreator","updateNewMessageBodyActionCreator","body"],"mappings":"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","sourcesContent":["import {profileReducer} from \"./profile-reducer\";\r\nimport {gialogReducer} from \"./dialogs-reducer\";\r\nimport {sidebarReducer} from \"./sidebar-reducer\";\r\n\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\nexport type DialogType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type PostType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\nexport type ProfilePageType = {\r\n    newPostText: string\r\n    posts: Array<PostType>\r\n}\r\nexport type DialogPageType = {\r\n    dialogs: Array<DialogType>\r\n    messages: Array<MessageType>\r\n    newMessageBody: string\r\n}\r\ntype SidebarType = {}\r\n\r\nexport type StateType = {\r\n    profilePage: ProfilePageType\r\n    dialogsPage: DialogPageType\r\n    sidebar: SidebarType\r\n}\r\n\r\nexport type StoreType = {\r\n    _state: StateType\r\n    _callSubcsriber: CallSubscriberType\r\n    getState: GetStateType\r\n    subscribe: SubscribeType\r\n    // addPost: AddPostType\r\n    // uodateNewPostText: UpdateNewPostTextType\r\n    dispatch: DispatchType\r\n}\r\n\r\nexport type CallSubscriberType = () => void;\r\nexport type SubscribeType = (state: CallSubscriberType) => void;\r\nexport type GetStateType = () => StateType;\r\nexport type DispatchType = (action: ActionType) => void\r\nexport type AddPostType = () => void\r\nexport type UpdateNewPostTextType = (text: string) => void\r\n\r\nexport type ActionType = AddPostActionType\r\n    | OnPostChangeActionType\r\n    | SendMessageActionType\r\n    | UpdateNewMessageBodyType\r\n\r\n\r\nexport let store: StoreType = {\r\n    _state: {\r\n        profilePage: {\r\n            newPostText: \"\",\r\n            posts: [\r\n                {id: 1, message: 'Hi, how are you', likesCount: 12},\r\n                {id: 2, message: 'It\\'s my first post', likesCount: 11}\r\n            ],\r\n        },\r\n        dialogsPage: {\r\n            dialogs: [\r\n                {id: 1, name: 'Dimych'},\r\n                {id: 2, name: 'Andrew'},\r\n                {id: 3, name: 'Sveta'},\r\n                {id: 4, name: 'Sasha'},\r\n                {id: 5, name: 'Viktor'},\r\n                {id: 6, name: 'Valera'},\r\n            ],\r\n            messages: [\r\n                {id: 1, message: 'Hi'},\r\n                {id: 2, message: 'Hi'},\r\n                {id: 3, message: 'Yo'},\r\n                {id: 4, message: 'Yo'},\r\n                {id: 5, message: 'Yo'},\r\n            ],\r\n            newMessageBody: \"\",\r\n        },\r\n        sidebar: {}\r\n    },\r\n    _callSubcsriber() {\r\n        console.log('State was changed')\r\n    },\r\n\r\n    getState() {\r\n        return this._state;\r\n    },\r\n    subscribe(observer) {\r\n        this._callSubcsriber = observer;\r\n    },\r\n\r\n    dispatch(action: ActionType) {\r\n        this._state.profilePage = profileReducer(this._state.profilePage, action)\r\n        this._state.dialogsPage = gialogReducer(this._state.dialogsPage, action)\r\n        this._state.sidebar = sidebarReducer(this._state.sidebar, action)\r\n\r\n        this._callSubcsriber();\r\n\r\n    }\r\n}\r\n\r\n\r\nexport type AddPostActionCreaterType = () => AddPostActionType\r\nexport type UpdateNewPostTextActionCreaterType = (text: string) => OnPostChangeActionType\r\nexport type UpdateNewMessageBodyActionCreatorType = (body: string) => UpdateNewMessageBodyType\r\nexport type SendMessageActionCreatorType = () => SendMessageActionType\r\n\r\nexport type AddPostActionType = {\r\n    type: 'ADD-POST'\r\n}\r\nexport type OnPostChangeActionType = {\r\n    type: 'UPDATE-NEW-POST-TEXT'\r\n    newText: string\r\n}\r\nexport type UpdateNewMessageBodyType = {\r\n    type: 'UPDATE-NEW-MESSAGE-BODY'\r\n    body: string\r\n}\r\nexport type SendMessageActionType = {\r\n    type: 'SEND-MESSAGE'\r\n}\r\n\r\n\r\n//actions:\r\nconst ADD_POST = 'ADD-POST'\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT'\r\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY'\r\nconst SEND_MESSAGE = 'SEND-MESSAGE'\r\n\r\n\r\n//actionsCreaters:\r\nexport const addPostActionCreater: AddPostActionCreaterType = () => {\r\n    return {type: ADD_POST}\r\n}\r\nexport const updateNewPostTextActionCreater: UpdateNewPostTextActionCreaterType = (text) => {\r\n    return {type: UPDATE_NEW_POST_TEXT, newText: text}\r\n}\r\nexport const sendMessageActionCreator: SendMessageActionCreatorType = () => {\r\n    return {type: SEND_MESSAGE}\r\n}\r\nexport const updateNewMessageBodyActionCreator: UpdateNewMessageBodyActionCreatorType = (body) => {\r\n    return {type: UPDATE_NEW_MESSAGE_BODY, body: body}\r\n}\r\n\r\n\r\n\r\n/* if (action.type === ADD_POST) {\r\n          const newPost: PostType = {\r\n              id: new Date().getTime(),\r\n              message: this._state.profilePage.newPostText,\r\n              likesCount: 0\r\n          };\r\n\r\n          this._state.profilePage.posts.push(newPost);\r\n          this._state.profilePage.newPostText = '';\r\n          this._callSubcsriber();\r\n      } else if (action.type === UPDATE_NEW_POST_TEXT) {\r\n          this._state.profilePage.newPostText = action.newText;\r\n          this._callSubcsriber();\r\n\r\n      } else if (action.type === SEND_MESSAGE) {\r\n          let body = this._state.dialogsPage.newMessageBody;\r\n          this._state.dialogsPage.newMessageBody = '';\r\n          this._state.dialogsPage.messages.push({id: 6, message: body});\r\n          this._callSubcsriber();\r\n      } else if (action.type === UPDATE_NEW_MESSAGE_BODY) {\r\n          this._state.dialogsPage.newMessageBody = action.body;\r\n\r\n      }*/"]},"metadata":{},"sourceType":"module"}