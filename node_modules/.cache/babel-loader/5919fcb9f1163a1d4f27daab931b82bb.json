{"ast":null,"code":"var _jsxFileName = \"C:\\\\incubator\\\\social_network_ts\\\\src\\\\components\\\\Users\\\\UsersContainer.tsx\";\nimport React from \"react\";\nimport { followAC, setCurrentPageAC, setTotalUsersCountAC, setUsersAC, unfollowAC } from \"../../redux/users-reducer\";\nimport { connect } from \"react-redux\";\nimport { Users } from \"./Users\";\nimport axios from \"axios\";\nexport class UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Users, {\n      setTotalUsersCount: this.props.setTotalUsersCount,\n      currentPage: this.props.currentPage,\n      setCurrentPage: this.props.setCurrentPage,\n      setUsers: this.props.setUsers,\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      users: this.props.users,\n      onPageChanged: this.onPageChanged,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 16\n      }\n    });\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    follow: userId => {\n      dispatch(followAC(userId));\n    },\n    unfollow: userId => {\n      dispatch(unfollowAC(userId));\n    },\n    setUsers: users => {\n      dispatch(setUsersAC(users));\n    },\n    setCurrentPage: pageNumber => {\n      dispatch(setCurrentPageAC(pageNumber));\n    },\n    setTotalUsersCount: totalCount => {\n      dispatch(setTotalUsersCountAC(totalCount));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);","map":{"version":3,"sources":["C:/incubator/social_network_ts/src/components/Users/UsersContainer.tsx"],"names":["React","followAC","setCurrentPageAC","setTotalUsersCountAC","setUsersAC","unfollowAC","connect","Users","axios","UsersContainer","Component","onPageChanged","pageNumber","props","setCurrentPage","get","pageSize","then","response","setUsers","data","items","componentDidMount","currentPage","setTotalUsersCount","totalCount","render","totalUsersCount","users","follow","unfollow","mapStateToProps","state","usersPage","mapDispatchToProps","dispatch","userId"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n    ActionsUsersType,\r\n    followAC,\r\n    setCurrentPageAC,\r\n    setTotalUsersCountAC,\r\n    setUsersAC,\r\n    unfollowAC,\r\n    UsersPropsType\r\n} from \"../../redux/users-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\nimport {Users} from \"./Users\";\r\nimport axios from \"axios\";\r\n\r\ntype MapStateToProps = {\r\n    users: Array<UsersPropsType>\r\n    pageSize: number   //?????\r\n    totalUsersCount: number //????\r\n    currentPage: number //??\r\n\r\n}\r\ntype MapDispatchToProps = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setUsers: (users: Array<UsersPropsType>) => void\r\n    setCurrentPage: (pageNumber: number) => void\r\n    setTotalUsersCount: (totalCount: number) => void\r\n}\r\nexport type UserType = {\r\n    users: Array<UsersPropsType>\r\n    follow: (id: number) => void\r\n    unfollow: (id: number) => void\r\n    setUsers: (users: Array<UsersPropsType>) => void\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    setCurrentPage: (pageNumber: number) => void\r\n    setTotalUsersCount: (totalCount: number) => void\r\n    onPageChanged: (pageNumber: number) => void\r\n}\r\n\r\nexport class UsersContainer extends  React.Component <UserType> {\r\n\r\n    componentDidMount() {\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\r\n            this.props.setUsers(response.data.items);\r\n            this.props.setTotalUsersCount(response.data.totalCount);\r\n        });\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\r\n            this.props.setUsers(response.data.items);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <Users\r\n            setTotalUsersCount={this.props.setTotalUsersCount}\r\n            currentPage={this.props.currentPage}\r\n            setCurrentPage={this.props.setCurrentPage}\r\n            setUsers={this.props.setUsers}\r\n            totalUsersCount={this.props.totalUsersCount}\r\n            pageSize={this.props.pageSize}\r\n            users={this.props.users}\r\n            onPageChanged={this.onPageChanged}\r\n            follow={this.props.follow}\r\n            unfollow={this.props.unfollow}\r\n        />\r\n\r\n\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: StateType): MapStateToProps => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: (action: ActionsUsersType) => void): MapDispatchToProps => {\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(followAC(userId))\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowAC(userId));\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users))\r\n        },\r\n        setCurrentPage: (pageNumber) => {\r\n            dispatch(setCurrentPageAC(pageNumber))\r\n        },\r\n        setTotalUsersCount: (totalCount) => {\r\n            dispatch(setTotalUsersCountAC(totalCount))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect<MapStateToProps, MapDispatchToProps, {}, StateType>\r\n(mapStateToProps, mapDispatchToProps) (UsersContainer);"]},"metadata":{},"sourceType":"module"}