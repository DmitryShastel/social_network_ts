{"ast":null,"code":"import { followAC, setUsersAC, unfollowAC } from \"../../redux/users-reducer\";\nimport { connect } from \"react-redux\";\nimport { Users } from \"./Users\";\n\nlet mapStateToProps = state => {\n  return {\n    users: state.userPage.users\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    follow: userId => {\n      dispatch(followAC(userId));\n    },\n    unfollow: userId => {\n      dispatch(unfollowAC(userId));\n    },\n    setUsers: users => {\n      dispatch(setUsersAC(users));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);","map":{"version":3,"sources":["C:/incubator/social_network_ts/src/components/Users/UsersContainer.tsx"],"names":["followAC","setUsersAC","unfollowAC","connect","Users","mapStateToProps","state","users","userPage","mapDispatchToProps","dispatch","follow","userId","unfollow","setUsers"],"mappings":"AACA,SAAQA,QAAR,EAAkBC,UAAlB,EAA8BC,UAA9B,QAA+D,2BAA/D;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,KAAR,QAAoB,SAApB;;AAeA,IAAIC,eAAe,GAAIC,KAAD,IAAuC;AACzD,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACE,QAAN,CAAeD;AADnB,GAAP;AAGH,CAJD;;AAMA,IAAIE,kBAAkB,GAAIC,QAAD,IAAgE;AACrF,SAAO;AACHC,IAAAA,MAAM,EAAGC,MAAD,IAAY;AAChBF,MAAAA,QAAQ,CAACV,QAAQ,CAACY,MAAD,CAAT,CAAR;AACH,KAHE;AAIHC,IAAAA,QAAQ,EAAGD,MAAD,IAAY;AAClBF,MAAAA,QAAQ,CAACR,UAAU,CAACU,MAAD,CAAX,CAAR;AACH,KANE;AAOHE,IAAAA,QAAQ,EAAGP,KAAD,IAAW;AACjBG,MAAAA,QAAQ,CAACT,UAAU,CAACM,KAAD,CAAX,CAAR;AACH;AATE,GAAP;AAWH,CAZD;;AAcA,eAAeJ,OAAO,CACrBE,eADqB,EACJI,kBADI,CAAP,CACwBL,KADxB,CAAf","sourcesContent":["import React from \"react\";\r\nimport {followAC, setUsersAC, unfollowAC, UsersPropsType} from \"../../redux/users-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Users} from \"./Users\";\r\nimport {ActionType} from \"../../redux/state\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\n\r\n\r\ntype MapStateToProps = {\r\n    users: Array<UsersPropsType>\r\n\r\n}\r\ntype MapDispatchToProps = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setUsers: (users: Array<UsersPropsType>) => void\r\n}\r\n\r\nlet mapStateToProps = (state: StateType): MapStateToProps => {\r\n    return {\r\n        users: state.userPage.users\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: (action: ActionType) => void): MapDispatchToProps => {\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(followAC(userId))\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowAC(userId));\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect<MapStateToProps, MapDispatchToProps, {}, StateType>\r\n(mapStateToProps, mapDispatchToProps) (Users);"]},"metadata":{},"sourceType":"module"}