{"ast":null,"code":"import { sendMessageActionCreator, updateNewMessageBodyActionCreator } from \"../../redux/dialogs-reducer\";\nimport { Dialogs } from \"./Dialogs\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToProps = state => {\n  return {\n    dialogsPage: state.dialogsPage\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    sendMessage: () => {\n      dispatch(sendMessageActionCreator());\n    },\n    updateNewMessageBody: body => {\n      dispatch(updateNewMessageBodyActionCreator(body));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dialogs);\n/*export const DialogsContainer: React.FC = () => {\r\n\r\n    return <StoreContext.Consumer>\r\n        { (store) => {\r\n            let state = store.getState().dialogsPage;\r\n            let onSendMessageClick = () => {\r\n                store.dispatch(sendMessageActionCreator());\r\n            }\r\n            let onNewMessageChange = (body:string) => {\r\n                store.dispatch(updateNewMessageBodyActionCreator(body))\r\n            }\r\n            return < Dialogs updateNewMessageBody = {onNewMessageChange}\r\n                             sendMessage = {onSendMessageClick}\r\n                             dialogsPage = {state}/>\r\n        }\r\n        }\r\n    </StoreContext.Consumer>\r\n}*/","map":{"version":3,"sources":["C:/incubator/social_network_ts/src/components/Dialogs/DialogsContainer.tsx"],"names":["sendMessageActionCreator","updateNewMessageBodyActionCreator","Dialogs","connect","mapStateToProps","state","dialogsPage","mapDispatchToProps","dispatch","sendMessage","updateNewMessageBody","body"],"mappings":"AAEA,SAAQA,wBAAR,EAAkCC,iCAAlC,QAA0E,6BAA1E;AACA,SAAwBC,OAAxB,QAAsC,WAAtC;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAWA,IAAIC,eAAe,GAAIC,KAAD,IAAwC;AAC1D,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACC;AADhB,GAAP;AAGH,CAJD;;AAKA,IAAIC,kBAAkB,GAAIC,QAAD,IAAgE;AACrF,SAAO;AACHC,IAAAA,WAAW,EAAE,MAAM;AACfD,MAAAA,QAAQ,CAACR,wBAAwB,EAAzB,CAAR;AACH,KAHE;AAIHU,IAAAA,oBAAoB,EAAGC,IAAD,IAAkB;AACpCH,MAAAA,QAAQ,CAACP,iCAAiC,CAACU,IAAD,CAAlC,CAAR;AACH;AANE,GAAP;AASH,CAVD;;AAYA,eAAeR,OAAO,CACrBC,eADqB,EACJG,kBADI,CAAP,CACuBL,OADvB,CAAf;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\r\nimport {ActionType, } from \"../../redux/state\";\r\nimport {sendMessageActionCreator, updateNewMessageBodyActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport {DialogPageType, Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\n\r\ntype MapStateToProps = {\r\n    dialogsPage: DialogPageType\r\n}\r\ntype MapDispatchToProps = {\r\n    updateNewMessageBody: (body: string) => void\r\n    sendMessage: () => void\r\n}\r\n\r\nlet mapStateToProps = (state: StateType): MapStateToProps  => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: (action: ActionType) => void): MapDispatchToProps => {\r\n    return {\r\n        sendMessage: () => {\r\n            dispatch(sendMessageActionCreator());\r\n        },\r\n        updateNewMessageBody: (body: string) => {\r\n            dispatch(updateNewMessageBodyActionCreator(body))\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default connect<MapStateToProps, MapDispatchToProps, {}, StateType>\r\n(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*export const DialogsContainer: React.FC = () => {\r\n\r\n    return <StoreContext.Consumer>\r\n        { (store) => {\r\n            let state = store.getState().dialogsPage;\r\n            let onSendMessageClick = () => {\r\n                store.dispatch(sendMessageActionCreator());\r\n            }\r\n            let onNewMessageChange = (body:string) => {\r\n                store.dispatch(updateNewMessageBodyActionCreator(body))\r\n            }\r\n            return < Dialogs updateNewMessageBody = {onNewMessageChange}\r\n                             sendMessage = {onSendMessageClick}\r\n                             dialogsPage = {state}/>\r\n        }\r\n        }\r\n    </StoreContext.Consumer>\r\n}*/\r\n"]},"metadata":{},"sourceType":"module"}