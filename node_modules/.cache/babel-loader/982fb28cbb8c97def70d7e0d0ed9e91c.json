{"ast":null,"code":"const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET-USERS';\nexport const followAC = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unfollowAC = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsersAC = users => ({\n  type: SET_USERS,\n  users\n});\nlet initialState = {\n  users: [\n    /*{\r\n        id: 1,\r\n        followed: true,\r\n        fullName: 'Dima',\r\n        status: 'I am boss',\r\n        location: {city: 'Minsk', country: 'Belarus'},\r\n        photoUrl: 'https://cdn1.iconfinder.com/data/icons/user-avatars-2/300/04-512.png'\r\n    },\r\n    {\r\n        id: 2,\r\n        followed: true,\r\n        fullName: 'Denis',\r\n        status: 'I am boss too',\r\n        location: {city: 'Moscow', country: 'Russia'},\r\n        photoUrl: 'https://cdn1.iconfinder.com/data/icons/user-avatars-2/300/04-512.png'\r\n    },\r\n    {\r\n        id: 3,\r\n        followed: true,\r\n        fullName: 'Sasha',\r\n        status: 'I am boss too',\r\n        location: {city: 'Kiev', country: 'Ukraine'},\r\n        photoUrl: 'https://cdn1.iconfinder.com/data/icons/user-avatars-2/300/04-512.png'\r\n    }*/\n  ]\n};\nexport const usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      return { ...state,\n        users: [...state.users, ...action.users]\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/incubator/social_network_ts/src/redux/users-reducer.ts"],"names":["FOLLOW","UNFOLLOW","SET_USERS","followAC","userId","type","unfollowAC","setUsersAC","users","initialState","usersReducer","state","action","map","u","id","followed"],"mappings":"AAkCA,MAAMA,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,SAAS,GAAG,WAAlB;AAEA,OAAO,MAAMC,QAAQ,GAAIC,MAAD,KAA6C;AAACC,EAAAA,IAAI,EAAEL,MAAP;AAAeI,EAAAA;AAAf,CAA7C,CAAjB;AACP,OAAO,MAAME,UAAU,GAAIF,MAAD,KAAgD;AAACC,EAAAA,IAAI,EAAEJ,QAAP;AAAiBG,EAAAA;AAAjB,CAAhD,CAAnB;AACP,OAAO,MAAMG,UAAU,GAAIC,KAAD,KAA6D;AAACH,EAAAA,IAAI,EAAEH,SAAP;AAAkBM,EAAAA;AAAlB,CAA7D,CAAnB;AAEP,IAAIC,YAA8B,GAAG;AACjCD,EAAAA,KAAK,EAAE;AACH;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBW;AAD0B,CAArC;AA6BA,OAAO,MAAME,YAAY,GAAG,CAACC,KAAuB,GAAGF,YAA3B,EAAyCG,MAAzC,KAAsE;AAE9F,UAAQA,MAAM,CAACP,IAAf;AACI,SAAKL,MAAL;AACI,aAAO,EACH,GAAGW,KADA;AAEHH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYK,GAAZ,CAAgBC,CAAC,IAAI;AACxB,cAAIA,CAAC,CAACC,EAAF,KAASH,MAAM,CAACR,MAApB,EAA4B;AACxB,mBAAO,EAAC,GAAGU,CAAJ;AAAOE,cAAAA,QAAQ,EAAE;AAAjB,aAAP;AACH;;AACD,iBAAOF,CAAP;AACH,SALM;AAFJ,OAAP;;AASJ,SAAKb,QAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYK,GAAZ,CAAgBC,CAAC,IAAI;AACxB,cAAIA,CAAC,CAACC,EAAF,KAASH,MAAM,CAACR,MAApB,EAA4B;AACxB,mBAAO,EAAC,GAAGU,CAAJ;AAAOE,cAAAA,QAAQ,EAAE;AAAjB,aAAP;AACH;;AACD,iBAAOF,CAAP;AACH,SALM;AAFJ,OAAP;;AASJ,SAAKZ,SAAL;AACI,aAAO,EACH,GAAGS,KADA;AACOH,QAAAA,KAAK,EAAE,CAAC,GAAGG,KAAK,CAACH,KAAV,EAAiB,GAAGI,MAAM,CAACJ,KAA3B;AADd,OAAP;;AAGJ;AACI,aAAOG,KAAP;AA1BR;AA6BH,CA/BM","sourcesContent":["export type ActionsUsersType = | FollowActionCreatorType\r\n    | UnfollowActionCreatorType\r\n    | SetUsersActionCreatorType\r\n\r\nexport type UsersPropsType = {\r\n    userPhoto: string\r\n    //photoUrl: string\r\n    id: number\r\n    followed: boolean\r\n    fullName: string\r\n    status: string\r\n    name: string\r\n    location: {city: string, country: string}\r\n    photos: {\r\n        small: string,\r\n        //large: string\r\n    }\r\n}\r\nexport type UsersReducerType = {\r\n    users: Array<UsersPropsType>\r\n}\r\nexport type FollowActionCreatorType = {\r\n    type: 'FOLLOW',\r\n    userId: number\r\n}\r\nexport type UnfollowActionCreatorType = {\r\n    type: 'UNFOLLOW',\r\n    userId: number\r\n}\r\nexport type SetUsersActionCreatorType = {\r\n    type: 'SET-USERS',\r\n    users: Array<UsersPropsType>\r\n}\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET-USERS'\r\n\r\nexport const followAC = (userId: number):FollowActionCreatorType => ({type: FOLLOW, userId});\r\nexport const unfollowAC = (userId: number): UnfollowActionCreatorType => ({type: UNFOLLOW, userId});\r\nexport const setUsersAC = (users: Array<UsersPropsType>): SetUsersActionCreatorType=> ({type: SET_USERS, users})\r\n\r\nlet initialState: UsersReducerType = {\r\n    users: [\r\n        /*{\r\n            id: 1,\r\n            followed: true,\r\n            fullName: 'Dima',\r\n            status: 'I am boss',\r\n            location: {city: 'Minsk', country: 'Belarus'},\r\n            photoUrl: 'https://cdn1.iconfinder.com/data/icons/user-avatars-2/300/04-512.png'\r\n        },\r\n        {\r\n            id: 2,\r\n            followed: true,\r\n            fullName: 'Denis',\r\n            status: 'I am boss too',\r\n            location: {city: 'Moscow', country: 'Russia'},\r\n            photoUrl: 'https://cdn1.iconfinder.com/data/icons/user-avatars-2/300/04-512.png'\r\n        },\r\n        {\r\n            id: 3,\r\n            followed: true,\r\n            fullName: 'Sasha',\r\n            status: 'I am boss too',\r\n            location: {city: 'Kiev', country: 'Ukraine'},\r\n            photoUrl: 'https://cdn1.iconfinder.com/data/icons/user-avatars-2/300/04-512.png'\r\n        }*/\r\n    ]\r\n}\r\n\r\nexport const usersReducer = (state: UsersReducerType = initialState, action: ActionsUsersType) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state, users: [...state.users, ...action.users]\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}