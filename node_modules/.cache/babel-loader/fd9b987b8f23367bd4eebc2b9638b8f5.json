{"ast":null,"code":"var _jsxFileName = \"C:\\\\incubator\\\\social_network_ts\\\\src\\\\components\\\\Profile\\\\MyPosts\\\\MyPosts.tsx\";\nimport React from \"react\";\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\n\nconst MyPosts = props => {\n  let postsElement = props.posts.map(p => /*#__PURE__*/React.createElement(Post, {\n    message: p.message,\n    likesCount: p.likesCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 30\n    }\n  }));\n  let newPostElement = React.createRef();\n\n  let addPost = () => {\n    if (newPostElement.current) {\n      let action = {\n        type: 'ADD-POST',\n        newText: ''\n      };\n      props.dispatch(action);\n    }\n  };\n\n  const onPostChange = () => {\n    let text = newPostElement.current && newPostElement.current.value;\n\n    if (text) {\n      let action = {\n        type: 'UPDATE-NEW-POST-TEXT',\n        newText: text\n      };\n      props.dispatch(action);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: s.postsBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"My posts\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    ref: newPostElement,\n    value: props.newPostText,\n    onChange: onPostChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, \"Add post\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.posts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, postsElement));\n};\n\nexport default MyPosts;","map":{"version":3,"sources":["C:/incubator/social_network_ts/src/components/Profile/MyPosts/MyPosts.tsx"],"names":["React","s","Post","MyPosts","props","postsElement","posts","map","p","message","likesCount","newPostElement","createRef","addPost","current","action","type","newText","dispatch","onPostChange","text","value","postsBlock","newPostText"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AASA,MAAMC,OAAO,GAAIC,KAAD,IAAqB;AAEjC,MAAIC,YAAY,GACZD,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAgBC,CAAC,iBAAI,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAEA,CAAC,CAACC,OAAjB;AAA0B,IAAA,UAAU,EAAED,CAAC,CAACE,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArB,CADJ;AAGA,MAAIC,cAAc,GAAGX,KAAK,CAACY,SAAN,EAArB;;AAEA,MAAIC,OAAO,GAAG,MAAM;AAChB,QAAIF,cAAc,CAACG,OAAnB,EAA4B;AACxB,UAAIC,MAAM,GAAG;AAACC,QAAAA,IAAI,EAAE,UAAP;AAAmBC,QAAAA,OAAO,EAAE;AAA5B,OAAb;AACAb,MAAAA,KAAK,CAACc,QAAN,CAAeH,MAAf;AACH;AACJ,GALD;;AAOA,QAAMI,YAAY,GAAG,MAAM;AACvB,QAAIC,IAAI,GAAGT,cAAc,CAACG,OAAf,IAA0BH,cAAc,CAACG,OAAf,CAAuBO,KAA5D;;AACA,QAAGD,IAAH,EAAS;AACL,UAAIL,MAAM,GAAG;AAACC,QAAAA,IAAI,EAAE,sBAAP;AAA+BC,QAAAA,OAAO,EAAEG;AAAxC,OAAb;AACAhB,MAAAA,KAAK,CAACc,QAAN,CAAeH,MAAf;AACH;AACJ,GAND;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAEd,CAAC,CAACqB,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAU,IAAA,GAAG,EAAEX,cAAf;AAA+B,IAAA,KAAK,EAAEP,KAAK,CAACmB,WAA5C;AAAyD,IAAA,QAAQ,EAAEJ,YAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,OAAO,EAAEN,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAJJ,CAFJ,eAUI;AAAK,IAAA,SAAS,EAAEZ,CAAC,CAACK,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,YADL,CAVJ,CADJ;AAgBH,CAtCD;;AAyCA,eAAeF,OAAf","sourcesContent":["import React from \"react\";\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post'\r\nimport {DispatchType, PostType} from \"../../../redux/state\";\r\n\r\ntype PropsType = {\r\n    posts: Array<PostType>\r\n    newPostText: string\r\n    dispatch: DispatchType\r\n}\r\n\r\nconst MyPosts = (props:PropsType) => {\r\n\r\n    let postsElement =\r\n        props.posts.map(p => <Post message={p.message} likesCount={p.likesCount}/>)\r\n\r\n    let newPostElement = React.createRef<HTMLTextAreaElement>();\r\n\r\n    let addPost = () => {\r\n        if (newPostElement.current) {\r\n            let action = {type: 'ADD-POST', newText: ''}\r\n            props.dispatch(action)\r\n        }\r\n    }\r\n\r\n    const onPostChange = () => {\r\n        let text = newPostElement.current && newPostElement.current.value;\r\n        if(text) {\r\n            let action = {type: 'UPDATE-NEW-POST-TEXT', newText: text};\r\n            props.dispatch(action)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea ref={newPostElement} value={props.newPostText} onChange={onPostChange}/>\r\n                </div>\r\n                <div>\r\n                    <button onClick={addPost}>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElement}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MyPosts;"]},"metadata":{},"sourceType":"module"}